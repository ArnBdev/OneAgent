{
  "name": "OneAgent Development Container",
  "image": "mcr.microsoft.com/devcontainers/typescript-node:latest",
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "22"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    },
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-vscode.vscode-typescript-next",
        "esbenp.prettier-vscode",
        "ms-python.python",
        "ms-python.pylint",
        "ms-vscode.vscode-json",
        "GitHub.copilot",
        "GitHub.copilot-chat"
      ],
      "settings": {
        "typescript.preferences.preferTypeOnlyAutoImports": true,
        "typescript.preferences.includePackageJsonAutoImports": "on",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "python.defaultInterpreterPath": "/usr/local/bin/python3",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true
      },
      "mcp": {
        "servers": {
          "oneagent": {
            "command": "node",
            "args": [
              "dist/coreagent/server/unified-mcp-server.js"
            ],
            "env": {
              "NODE_ENV": "development",
              "ONEAGENT_LOG_LEVEL": "debug"
            }
          }
        }
      }
    }
  },
  "forwardPorts": [
    8083,
    8080,
    8010,
    3000
  ],
  "portsAttributes": {
    "8083": {
      "label": "OneAgent MCP Server (Production)",
      "onAutoForward": "notify"
    },
    "8080": {
      "label": "OneAgent MCP Server (Legacy)",
      "onAutoForward": "notify"
    },
    "8010": {
      "label": "OneAgent Memory Server",
      "onAutoForward": "notify"
    },
    "3000": {
      "label": "OneAgent Web UI",
      "onAutoForward": "notify"
    }
  },
  "postCreateCommand": "npm install && npm run build",
  "postStartCommand": "npm run server:unified &",
  "remoteUser": "node",
  "workspaceFolder": "/workspaces/OneAgent",
  "containerEnv": {
    "NODE_ENV": "development",
    "ONEAGENT_ENV": "container",
    "ONEAGENT_LOG_LEVEL": "debug"
  },
  "mounts": [
    "source=${localWorkspaceFolder}/.env,target=/workspaces/OneAgent/.env,type=bind,consistency=cached"
  ]
}
