// AUTO-GENERATED FILE - DO NOT EDIT
// Generated by scripts/generate-mission-control-types.ts
// Source of truth: JSON Schemas in mission-control/schemas
// Generation Time: 2025-09-22T16:47:43.441Z

export type InboundMissionControlMessage =
  | { type: 'subscribe'; channels: string[] }
  | { type: 'unsubscribe'; channels: string[] }
  | { type: 'ping' }
  | { type: 'whoami' }
  | { type: 'mission_start'; command: string }
  | { type: 'mission_cancel'; missionId: string };
export type OutboundMissionControlMessage =
  | { type: 'heartbeat'; server: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'pong'; server: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'whoami'; payload: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'subscription_ack'; payload: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'subscription_error'; error: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'protocol_error'; error: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'health_delta'; payload: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'metrics_tick'; payload: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'mission_ack'; payload: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'mission_update'; payload: { [k: string]: unknown }; [k: string]: unknown }
  | { type: 'mission_stats'; payload: { [k: string]: unknown }; [k: string]: unknown };

// Narrow helper discriminators (runtime type guards)
export function isMissionUpdate(
  msg: OutboundMissionControlMessage & { type?: unknown },
): msg is Extract<OutboundMissionControlMessage, { type: 'mission_update' }> {
  return (msg as { type?: unknown }).type === 'mission_update';
}
export function isMissionAck(
  msg: OutboundMissionControlMessage & { type?: unknown },
): msg is Extract<OutboundMissionControlMessage, { type: 'mission_ack' }> {
  return (msg as { type?: unknown }).type === 'mission_ack';
}
