name: Publish Release from Tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Git tag to publish (e.g., v4.0.2)
        required: true
        default: v4.0.2
      prerelease:
        description: Mark as prerelease
        required: true
        default: 'false'

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install deps
        run: npm ci

      - name: Sync README version from package.json
        run: |
          npm run sync:readme || true

      - name: Commit README update if present
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add README.md
            git commit -m "chore(release): sync README version to package.json"
            git push origin HEAD:main
          else
            echo "No README changes"
          fi

      - name: Create Release
        id: create_release
        uses: actions/github-script@v7
        env:
          TAG: ${{ github.event.inputs.tag }}
          PRERELEASE: ${{ github.event.inputs.prerelease }}
        with:
          script: |
            const tag = process.env.TAG;
            const prerelease = String(process.env.PRERELEASE).toLowerCase() === 'true';
            const notesPath = `RELEASE_NOTES/${tag}.md`;
            const fs = require('fs');
            let body = `Release ${tag}`;
            if (fs.existsSync(notesPath)) {
              body = fs.readFileSync(notesPath, 'utf8');
            }
            async function run() {
              try {
                const { data } = await github.rest.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: tag,
                  name: tag,
                  body,
                  prerelease,
                });
                core.notice(`Release created: ${data.html_url}`);
                console.log(data.html_url);
              } catch (err) {
                core.setFailed(err.message);
              }
            }
            run();
