// AUTO-GENERATED FILE - DO NOT EDIT
// Generated by scripts/generate-mission-control-types.ts
// Source of truth: JSON Schemas in mission-control/schemas
// Generation Time: 2025-09-22T21:42:17.123Z

// Inbound variant interfaces
/** Auto-generated interface for 'subscribe' variant */
export interface Inbound_subscribe { "type": "subscribe"; "channels": string[]; }

/** Auto-generated interface for 'unsubscribe' variant */
export interface Inbound_unsubscribe { "type": "unsubscribe"; "channels": string[]; }

/** Auto-generated interface for 'ping' variant */
export interface Inbound_ping { "type": "ping"; }

/** Auto-generated interface for 'whoami' variant */
export interface Inbound_whoami { "type": "whoami"; }

/** Auto-generated interface for 'mission_start' variant */
export interface Inbound_mission_start { "type": "mission_start"; "command": string; }

/** Auto-generated interface for 'mission_cancel' variant */
export interface Inbound_mission_cancel { "type": "mission_cancel"; "missionId": string; }

// Outbound variant interfaces
/** Auto-generated interface for 'heartbeat' variant */
export interface Outbound_heartbeat { "type": "heartbeat"; "server": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'pong' variant */
export interface Outbound_pong { "type": "pong"; "server": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'whoami' variant */
export interface Outbound_whoami { "type": "whoami"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'subscription_ack' variant */
export interface Outbound_subscription_ack { "type": "subscription_ack"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'subscription_error' variant */
export interface Outbound_subscription_error { "type": "subscription_error"; "error": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'protocol_error' variant */
export interface Outbound_protocol_error { "type": "protocol_error"; "error": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'health_delta' variant */
export interface Outbound_health_delta { "type": "health_delta"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'metrics_tick' variant */
export interface Outbound_metrics_tick { "type": "metrics_tick"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'mission_ack' variant */
export interface Outbound_mission_ack { "type": "mission_ack"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'mission_update' variant */
export interface Outbound_mission_update { "type": "mission_update"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'mission_stats' variant */
export interface Outbound_mission_stats { "type": "mission_stats"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

/** Auto-generated interface for 'anomaly_alert' variant */
export interface Outbound_anomaly_alert { "type": "anomaly_alert"; "payload": { [k: string]: unknown }; [k: string]: unknown; }

export type InboundMissionControlMessage = Inbound_subscribe | Inbound_unsubscribe | Inbound_ping | Inbound_whoami | Inbound_mission_start | Inbound_mission_cancel;
export type OutboundMissionControlMessage = Outbound_heartbeat | Outbound_pong | Outbound_whoami | Outbound_subscription_ack | Outbound_subscription_error | Outbound_protocol_error | Outbound_health_delta | Outbound_metrics_tick | Outbound_mission_ack | Outbound_mission_update | Outbound_mission_stats | Outbound_anomaly_alert;

// Narrow helper discriminators (runtime type guards)
export function isMissionUpdate(msg: OutboundMissionControlMessage & { type?: unknown }): msg is Extract<OutboundMissionControlMessage, { type: 'mission_update' }> { return (msg as { type?: unknown }).type === 'mission_update'; }
export function isMissionAck(msg: OutboundMissionControlMessage & { type?: unknown }): msg is Extract<OutboundMissionControlMessage, { type: 'mission_ack' }> { return (msg as { type?: unknown }).type === 'mission_ack'; }
